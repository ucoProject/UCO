@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix uco-owl: <https://ontology.unifiedcyberontology.org/owl/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<https://ontology.unifiedcyberontology.org/owl>
	a owl:Ontology ;
	rdfs:comment "This ontology defines SHACL shapes to perform conformance testing of OWL 2 DL.  Some of these shapes follow rules specified from the canonical, subtractive parsing process of Section 3 of the OWL 2 mapping to RDF.  From the last line of that document's Section 3, 'At the end of this process, the graph G MUST be empty,' anything not strictly matching patterns specified in that section cause the input graph to be non-conformant with OWL 2 DL."@en ;
	rdfs:seeAlso <https://www.w3.org/TR/2012/REC-owl2-mapping-to-rdf-20121211/#Mapping_from_RDF_Graphs_to_the_Structural_Specification> ;
	.

uco-owl:Axiom-shape
	a sh:NodeShape ;
	sh:sparql [
		a sh:SPARQLConstraint ;
		rdfs:comment "This requirement is determined from review of the canonical parsing process in Section 3 of the OWL 2 mapping to RDF.  All references to owl:Axioms are identified as blank nodes.  Therefore, any non-blank node that is an owl:Axiom will not be mapped and consumed by the mapping process."@en ;
		rdfs:seeAlso <https://www.w3.org/TR/2012/REC-owl2-mapping-to-rdf-20121211/#Mapping_from_RDF_Graphs_to_the_Structural_Specification> ;
		sh:message "An owl:Axiom must be a blank node."@en ;
		sh:select """
			PREFIX owl: <http://www.w3.org/2002/07/owl#>
			SELECT $this
			WHERE {
				$this a owl:Axiom .
				FILTER isIRI($this)
			}
		""" ;
	] ;
	sh:targetClass owl:Axiom ;
	.

uco-owl:DataOneOf-shape
	a sh:NodeShape ;
	sh:sparql [
		a sh:SPARQLConstraint ;
		rdfs:comment "This requirement is determined from review of the canonical parsing process in Section 3.2.4, Table 12, row 4 of the OWL 2 mapping to RDF.  All datatypes using owl:oneOf must be blank nodes.  Any non-blank node will not be mapped and consumed by the mapping process.  See also DataOneOf in the OWL 2 Syntax document, especially with 'Show RDF in Examples' turned on."@en ;
		rdfs:seeAlso
			<https://www.w3.org/TR/owl2-mapping-to-rdf/#Parsing_of_Expressions> ,
			<https://www.w3.org/TR/owl2-syntax/#Enumeration_of_Literals>
			;
		sh:message "For data ranges that are sets of literals, owl:oneOf must only be used on blank nodes." ;
		sh:select """
			PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
			SELECT $this
			WHERE {
				$this a rdfs:Datatype .
				FILTER ( isIRI($this) )
			}
		""" ;
	] ;
	sh:targetSubjectsOf owl:oneOf ;
	.

uco-owl:DatatypeProperty-shacl-constraints-shape
	a sh:NodeShape ;
	sh:sparql
		[
			a sh:SPARQLConstraint ;
			sh:message "An OWL Datatype Property cannot use a SHACL ClassConstraintComponent."@en ;
			sh:select """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
				PREFIX sh: <http://www.w3.org/ns/shacl#>
				SELECT $this
				WHERE {
					$value
						sh:class ?nClass ;
						sh:path / rdf:rest* / rdf:first? $this ;
						.
				}
			""" ;
		] ,
		[
			a sh:SPARQLConstraint ;
			sh:message "An OWL Datatype Property must not permit a non-Literal value via SHACL constraints."@en ;
			sh:select """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
				PREFIX sh: <http://www.w3.org/ns/shacl#>
				SELECT $this
				WHERE {
					$value sh:path / rdf:rest* / rdf:first? $this .

					{ $value sh:nodeKind sh:BlankNode . }
					UNION
					{ $value sh:nodeKind sh:BlankNodeOrIRI . }
					UNION
					{ $value sh:nodeKind sh:BlankNodeOrLiteral . }
					UNION
					{ $value sh:nodeKind sh:IRI . }
					UNION
					{ $value sh:nodeKind sh:IRIOrLiteral . }
				}
			""" ;
		]
		;
	sh:targetClass owl:DatatypeProperty ;
	.

uco-owl:Disjointedness-AP-DP-shape
	a sh:NodeShape ;
	sh:sparql [
		a sh:SPARQLConstraint ;
		rdfs:seeAlso <https://www.w3.org/TR/2012/REC-owl2-syntax-20121211/#Typing_Constraints_of_OWL_2_DL> ;
		sh:message "An IRI may not be a member of both an owl:AnnotationProperty and owl:DatatypeProperty."@en ;
		sh:select """
			PREFIX owl: <http://www.w3.org/2002/07/owl#>
			SELECT $this
			WHERE {
				$this a owl:DatatypeProperty ;
			}
		""" ;
	] ;
	sh:targetClass owl:AnnotationProperty ;
	.

uco-owl:Disjointedness-AP-OP-shape
	a sh:NodeShape ;
	sh:sparql [
		a sh:SPARQLConstraint ;
		rdfs:seeAlso <https://www.w3.org/TR/2012/REC-owl2-syntax-20121211/#Typing_Constraints_of_OWL_2_DL> ;
		sh:message "An IRI may not be a member of both an owl:AnnotationProperty and owl:ObjectProperty."@en ;
		sh:select """
			PREFIX owl: <http://www.w3.org/2002/07/owl#>
			SELECT $this
			WHERE {
				$this a owl:ObjectProperty ;
			}
		""" ;
	] ;
	sh:targetClass owl:AnnotationProperty ;
	.

uco-owl:Disjointedness-C-DT-shape
	a sh:NodeShape ;
	sh:sparql [
		a sh:SPARQLConstraint ;
		rdfs:seeAlso <https://www.w3.org/TR/2012/REC-owl2-syntax-20121211/#Typing_Constraints_of_OWL_2_DL> ;
		sh:message "An IRI may not be a member of both an owl:Class and owl:Datatype."@en ;
		sh:select """
			PREFIX owl: <http://www.w3.org/2002/07/owl#>
			SELECT $this
			WHERE {
				$this a owl:Datatype ;
			}
		""" ;
	] ;
	sh:targetClass owl:Class ;
	.

uco-owl:Disjointedness-DP-OP-shape
	a sh:NodeShape ;
	sh:sparql [
		a sh:SPARQLConstraint ;
		rdfs:seeAlso <https://www.w3.org/TR/2012/REC-owl2-syntax-20121211/#Typing_Constraints_of_OWL_2_DL> ;
		sh:message "An IRI may not be a member of both owl:DatatypeProperty and owl:ObjectProperty."@en ;
		sh:select """
			PREFIX owl: <http://www.w3.org/2002/07/owl#>
			SELECT $this
			WHERE {
				$this a owl:ObjectProperty ;
			}
		""" ;
	] ;
	sh:targetClass owl:DatatypeProperty ;
	.

uco-owl:List-shape
	a sh:NodeShape ;
	sh:property [
		a sh:PropertyShape ;
		sh:maxCount "1"^^xsd:integer ;
		sh:path rdf:first ;
	] ;
	sh:sparql [
		a sh:SPARQLConstraint ;
		rdfs:comment "This requirement is determined from review of the canonical parsing process in Section 3 of the OWL 2 mapping to RDF.  Table 5 removes any triple matching the pattern 'x a rdf:List`.  All other references throughout Section 3 to rdf:first are identified as blank nodes.  Therefore, any non-blank node that is an rdf:List will not be mapped and consumed by the mapping process, making the graph non-conformant with OWL 2 DL."@en ;
		rdfs:seeAlso <https://www.w3.org/TR/2012/REC-owl2-mapping-to-rdf-20121211/#Mapping_from_RDF_Graphs_to_the_Structural_Specification> ;
		sh:message "The subject of a triple with rdf:first as predicate must be a blank node."@en ;
		sh:select """
			SELECT $this
			WHERE {
				FILTER isIRI($this)
			}
		""" ;
	] ;
	sh:targetSubjectsOf rdf:first ;
	.

uco-owl:ObjectProperty-shacl-constraints-shape
	a sh:NodeShape ;
	sh:sparql
		[
			a sh:SPARQLConstraint ;
			sh:message "An OWL Object Property cannot use a SHACL DatatypeConstraintComponent."@en ;
			sh:select """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
				PREFIX sh: <http://www.w3.org/ns/shacl#>
				SELECT $this
				WHERE {
					$value
						sh:datatype ?nDatatype ;
						sh:path / rdf:rest* / rdf:first? $this ;
						.
				}
		""" ;
		] ,
		[
			a sh:SPARQLConstraint ;
			sh:message "An OWL Object Property must not permit a Literal value via SHACL consraints."@en ;
			sh:select """
				PREFIX sh: <http://www.w3.org/ns/shacl#>
				SELECT $this
				WHERE {
					$value sh:path / rdf:rest* / rdf:first? $this ;

					{ $value sh:nodeKind sh:BlankNodeOrLiteral . }
					UNION
					{ $value sh:nodeKind sh:IRIOrLiteral . }
					UNION
					{ $value sh:nodeKind sh:Literal . }
				}
		""" ;
		]
		;
	sh:targetClass owl:ObjectProperty ;
	.

uco-owl:ontologyIRI-shape
	a sh:NodeShape ;
	sh:property [
		a sh:PropertyShape ;
		sh:nodeKind sh:IRI ;
		sh:path owl:ontologyIRI ;
	] ;
	sh:sparql [
		a sh:SPARQLConstraint ;
		rdfs:seeAlso <https://www.w3.org/TR/owl2-syntax/#Ontology_IRI_and_Version_IRI> ;
		sh:message "'If an ontology has an ontology IRI but no version IRI, then a different ontology with the same ontology IRI but no version IRI SHOULD NOT exist.'"@en ;
		sh:select """
			PREFIX owl: <http://www.w3.org/2002/07/owl#>
			SELECT $this
			WHERE {
				$value owl:ontologyIRI $this .
				FILTER NOT EXISTS {
					$value owl:versionIRI ?nVersionIRI1 .
				}
				?nOtherOntology owl:ontologyIRI $this .
				FILTER NOT EXISTS {
					$nOtherOntology owl:versionIRI ?nVersionIRI2 .
				}
				FILTER ( $value != ?nOtherOntology )
			}
		""" ;
		sh:severity sh:Warning ;
	] ;
	sh:targetSubjectsOf owl:ontologyIRI ;
	.

uco-owl:versionIRI-shape
	a sh:NodeShape ;
	sh:property [
		a sh:PropertyShape ;
		sh:nodeKind sh:IRI ;
		sh:path owl:versionIRI ;
	] ;
	sh:sparql
		[
			a sh:SPARQLConstraint ;
			rdfs:seeAlso <https://www.w3.org/TR/owl2-syntax/#Ontology_IRI_and_Version_IRI> ;
			sh:message "'An ontology without an ontology IRI MUST NOT contain a version IRI.'"@en ;
			sh:select """
				PREFIX owl: <http://www.w3.org/2002/07/owl#>
				SELECT $this
				WHERE {
					$value owl:versionIRI $this .
					FILTER NOT EXISTS {
						$value owl:ontologyIRI ?nOntologyIRI .
					}
				}
			""" ;
		] ,
		[
			a sh:SPARQLConstraint ;
			rdfs:seeAlso <https://www.w3.org/TR/owl2-syntax/#Ontology_IRI_and_Version_IRI> ;
			sh:message "'If an ontology has both an ontology IRI and a version IRI, then a different ontology with the same ontology IRI and the same version IRI SHOULD NOT exist.'"@en ;
			sh:select """
				PREFIX owl: <http://www.w3.org/2002/07/owl#>
				SELECT $this
				WHERE {
					$value
						owl:ontologyIRI ?nOntologyIRI ;
						owl:versionIRI $this ;
						.
					?nOtherOntology
						owl:ontologyIRI ?nOntologyIRI ;
						owl:versionIRI $this ;
						.
					FILTER ( $value != ?nOtherOntology )
				}
			""" ;
			sh:severity sh:Warning ;
		]
		;
	sh:targetSubjectsOf owl:versionIRI ;
	.

